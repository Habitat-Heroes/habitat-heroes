/* eslint-disable no-restricted-syntax */
import store from '../store';

export const LEFT_TREE_BOUNDARY_COORDS = [
  [0, 392],
  [32, 376],
  [64, 360],
  [96, 344],
  [128, 328],
  [160, 312],
  [192, 296],
  [224, 280],
  [256, 264],
  [288, 248],
  [320, 232],
  [352, 216],
  [384, 200],
  [416, 184],
  [448, 168],
  [480, 152],
  [512, 136],
  [544, 120],
  [576, 104],
  [608, 88],
  [640, 72],
  [672, 56],
  [704, 40],
  [736, 24],
  [768, 8],
];

export const RIGHT_TREE_BOUNDARY_COORDS = [
  [1600, 392],
  [1568, 376],
  [1536, 360],
  [1504, 344],
  [1472, 328],
  [1440, 312],
  [1408, 296],
  [1376, 280],
  [1344, 264],
  [1312, 248],
  [1280, 232],
  [1248, 216],
  [1216, 200],
  [1184, 184],
  [1152, 168],
  [1120, 152],
  [1088, 136],
  [1056, 120],
  [1024, 104],
  [992, 88],
  [960, 72],
  [928, 56],
  [896, 40],
  [864, 24],
  [832, 8],
];

export const HOUSE_COORDS = [
  [800, 440],
  [768, 456],
  [736, 472],
  [704, 488],
  [672, 504],
  [640, 520],
  [608, 504],
  [640, 488],
  [672, 472],
  [704, 456],
  [736, 440],
  [736, 408],
  [704, 424],
  [672, 440],
  [640, 456],
  [608, 472],
  [576, 488],
  [576, 456],
  [608, 440],
  [640, 424],
  [672, 408],
  [704, 392],
  [672, 376],
  [640, 392],
  [608, 408],
  [576, 424],
  [544, 440],
  [512, 520],
  [512, 488],
  [544, 472],
  [512, 456],
  [480, 440],
  [512, 424],
  [544, 408],
  [576, 392],
  [608, 408],
  [640, 424],
  [672, 440],
  [640, 360],
  [608, 376],
  [416, 472],
  [448, 488],
  [480, 504],
  [544, 536],
  [576, 552],
  [576, 520],
  [672, 536],
  [704, 520],
  [448, 552],
  [480, 568],
  [512, 584],
  [512, 552],
  [544, 568],
];

export const HOUSE_COORDS_SET = new Set(
  HOUSE_COORDS.map((c) => `${c[0]}-${c[1]}`),
);

export const LAKE_COORDS = [
  [192, 456],
  [224, 472],
  [224, 440],
  [320, 392],
  [352, 408],
  [384, 424],
  [416, 440],
  [448, 456],
  [352, 376],
  [384, 392],
  [416, 408],
  [448, 424],
  [480, 440],
  [384, 360],
  [416, 376],
  [448, 392],
  [416, 344],
  [448, 360],
  [480, 376],
  [448, 328],
  [480, 344],
  [480, 312],
  [480, 664],
  [512, 680],
  [544, 696],
  [576, 712],
  [512, 648],
  [544, 664],
  [576, 680],
  [608, 696],
  [640, 712],
  [672, 728],
  [640, 744],
  [672, 760],
  [576, 648],
  [608, 664],
  [640, 680],
  [512, 548],
  [544, 600],
  [576, 616],
  [608, 632],
  [640, 648],
  [576, 548],
  [608, 600],
  [640, 616],
  [672, 632],
  [608, 568],
  [640, 584],
  [672, 600],
  [608, 536],
  [640, 552],
  [672, 576],
  [640, 520],
  [896, 520],
  [864, 536],
  [896, 552],
  [864, 568],
  [928, 568],
  [896, 584],
  [928, 600],
  [960, 616],
  [896, 616],
  [928, 632],
  [960, 648],
  [992, 664],
  [928, 664],
  [960, 680],
  [992, 696],
  [960, 712],
  [800, 248],
  [800, 280],
  [800, 312],
  [800, 344],
  [832, 360],
  [800, 376],
  [800, 408],
  [800, 152],
  [800, 184],
  [832, 168],
  [800, 216],
  [832, 200],
  [864, 184],
  [832, 232],
  [864, 216],
  [896, 200],
  [864, 248],
  [896, 232],
  [928, 216],
  [960, 232],
  [992, 248],
  [1024, 264],
  [1024, 296],
  [1056, 280],
  [1024, 328],
  [1056, 312],
  [1088, 296],
  [1024, 360],
  [1056, 344],
  [1088, 328],
  [1120, 312],
  [1056, 376],
  [1088, 360],
  [1120, 344],
  [1088, 392],
  [1088, 424],
  [1152, 456],
  [1152, 488],
  [1184, 504],
  [1152, 520],
  [1184, 536],
  [1216, 552],
  [1024, 488],
  [1056, 504],
  [1088, 520],
  [1120, 536],
  [1152, 552],
  [1184, 568],
  [1056, 536],
  [1088, 552],
  [1120, 568],
  [1152, 584],
  [1184, 600],
  [1216, 616],
  [1088, 584],
  [1120, 600],
  [1152, 616],
  [1184, 632],
  [1216, 648],
  [1248, 664],
  [1088, 616],
  [1120, 632],
  [1152, 648],
  [1184, 664],
  [1216, 680],
  [1056, 632],
  [1088, 648],
  [1120, 664],
  [1156, 680],
  [1184, 696],
  [1088, 680],
  [1120, 696],
  [1152, 712],
  [1088, 712],
  [1120, 728],
  [1088, 744],
  [832, 392],
  [672, 792],
  [480, 696],
  [512, 712],
  [544, 728],
  [160, 472],
  [192, 488],
  [224, 504],
];

export const LAKE_COORDS_SET = new Set(
  LAKE_COORDS.map((c) => `${c[0]}-${c[1]}`),
);

export const LEFT_BUTTON_BOUNDARY_COORDS = [
  [96, 792],
  [96, 760],
  [96, 728],
  [96, 696],
  [64, 712],
  [32, 696],
  [0, 712],
];

export const RIGHT_BUTTON_BOUNDARY_COORDS = [
  [1088, 808],
  [1088, 776],
  [1088, 744],
  [1088, 712],
  [1120, 728],
  [1152, 712],
  [1184, 728],
  [1216, 712],
  [1248, 728],
  [1280, 712],
  [1312, 728],
  [1344, 712],
  [1376, 728],
  [1408, 712],
  [1440, 728],
  [1472, 712],
  [1504, 728],
  [1536, 712],
  [1568, 728],
  [1600, 712],
];

const BUILDING_HOUSE_COORDS = [
  [576, 424],
  [608, 440],
  [608, 408],
  [640, 392],
  [640, 392],
  [640, 424],
  [640, 456],
  [672, 408],
  [672, 440],
  [704, 424],
];

export const BUILDING_HOUSE_COORDS_SET = new Set(
  BUILDING_HOUSE_COORDS.map((c) => `${c[0]}-${c[1]}`),
);

export const isCoordinateFree = (x, y, isPlayerMovement = false) => {
  const coordString = `${x}-${y}`;
  // Give a builder wallhacks
  if (isPlayerMovement && store.getState().houses.building) {
    return !BUILDING_HOUSE_COORDS_SET.has(coordString);
  }

  const hasHouse = store.getState().houses.total_house > 0;
  if ((!isPlayerMovement || hasHouse) && HOUSE_COORDS_SET.has(coordString)) {
    return false;
  }
  if (LAKE_COORDS_SET.has(coordString)) {
    return false;
  }
  for (const coord of LEFT_TREE_BOUNDARY_COORDS) {
    if (x <= coord[0] && y <= coord[1]) {
      return false;
    }
  }
  for (const coord of RIGHT_TREE_BOUNDARY_COORDS) {
    if (x >= coord[0] && y <= coord[1]) {
      return false;
    }
  }
  for (const coord of LEFT_BUTTON_BOUNDARY_COORDS) {
    if (x <= coord[0] && y >= coord[1]) {
      return false;
    }
  }
  for (const coord of RIGHT_BUTTON_BOUNDARY_COORDS) {
    if (x >= coord[0] && y >= coord[1]) {
      return false;
    }
  }
  return store.getState().mapItems.items.every((i) => {
    const { cellsOccupied, spritesheet } = i;
    if (isPlayerMovement && spritesheet === 'pavements') {
      return true;
    }
    return !cellsOccupied.some((c) => c[0] === x && c[1] === y);
  });
};
